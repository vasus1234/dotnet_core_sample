# # ASP.NET Core
# # Build and test ASP.NET Core projects targeting .NET Core.
# # Add steps that run tests, create a NuGet package, deploy, and more:
# # https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

# trigger:
# - master

# pool:
#   vmImage: ubuntu-latest

# variables:
#   buildConfiguration: 'Release'

# steps:
# - script: dotnet build --configuration $(buildConfiguration)
#   displayName: 'dotnet build $(buildConfiguration)'
# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

# pool:
#   vmImage: ubuntu-latest

# variables:
#   buildConfiguration: 'Release'

# steps:
# - script: dotnet build --configuration $(buildConfiguration)
#   displayName: 'dotnet build $(buildConfiguration)'


# - task: PublishBuildArtifacts@1
#   inputs:
#     PathtoPublish: '$(Build.ArtifactStagingDirectory)'
#     ArtifactName: 'drop'
#     publishLocation: 'Container'

# trigger:
# - main

pool: Default
  # vmImage: 'ubuntu-latest'

steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'clean package'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    jdkVersionOption: '1.8'
    mavenAuthenticateFeed: true

- script: |
    mkdir $(Build.ArtifactStagingDirectory)/webapp
    cp target/*.war $(Build.ArtifactStagingDirectory)/webapp/
    cd $(Build.ArtifactStagingDirectory)
    zip -r webapp.zip webapp/
  displayName: 'Package WebApp into ZIP'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)/webapp.zip'
    artifactName: 'webapp-artifact'
    publishLocation: 'pipeline'
